name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pylint lark
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
    - name: Lint with flake8
      run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests
      run: pytest --junit-xml=test-results.xml
       
    - name: Surface failing tests
      if: always()
      uses: pmeier/pytest-results-action@main
      with:
        # A list of JUnit XML files, directories containing the former, and wildcard
        # patterns to process.
        # See @actions/glob for supported patterns.
        path: test-results.xml
        
        # (Optional) Add a summary of the results at the top of the report
        summary: true
        
        # (Optional) Select which results should be included in the report.
        # Follows the same syntax as `pytest -r`
        display-options: fEX
        
        # (Optional) Fail the workflow if no JUnit XML was found.
        fail-on-empty: true
        
        # (Optional) Title of the test results section in the workflow summary
        title: Test results